version: '3.8'

services:
  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile  # Explicitly name the file
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - MONGODB_URL=mongodb://mongo:27017
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - mongo
      - redis
    volumes:
      - ./backend:/app
      - ./results:/app/results
    networks:
      - atomberg-network

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile  # Explicitly name the file
    ports:
      - "3000:80"
    depends_on:
      - backend
    environment:
      - REACT_APP_API_BASE_URL=http://localhost:8000
    networks:
      - atomberg-network

  # MongoDB Database
  mongo:
    image: mongo:5.0
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - atomberg-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - atomberg-network

  # Optional: Web scraping worker
  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile  # Explicitly name the file for the worker
    command: celery -A app.worker worker --loglevel=info
    environment:
      - DEBUG=True
      - MONGODB_URL=mongodb://mongo:27017
      - REDIS_HOST=redis
    depends_on:
      - mongo
      - redis
    volumes:
      - ./backend:/app
      - ./results:/app/results
    networks:
      - atomberg-network

volumes:
  mongodb_data:
  redis_data:

networks:
  atomberg-network:
    driver: bridge